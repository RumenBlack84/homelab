# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
services:
  radarr:
    image: hotio/radarr:latest
    container_name: radarr
    environment:
      - UMASK=000
    volumes:
      - /appdata/radarr_data:/config
      - media:/Media
      - downloads:/Downloads
    networks:
      - proxy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.grant.onl`)"
      - "traefik.http.routers.radarr.entrypoints=https"
      - "traefik.http.routers.secure.middlewares=default-whitelist"
      - "traefik.http.routers.radarr.tls.certresolver=cloudflare"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  sonarr:
    container_name: sonarr
    image: hotio/sonarr:latest
    networks:
      - proxy
    environment:
      - UMASK=000
    volumes:
      - /appdata/sonarr_data:/config
      - media:/Media
      - downloads:/Downloads
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.grant.onl`)"
      - "traefik.http.routers.sonarr.entrypoints=https"
      - "traefik.http.routers.secure.middlewares=default-whitelist"
      - "traefik.http.routers.sonarr.tls.certresolver=cloudflare"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  maintainerr:
    image: jorenn92/maintainerr:latest
    container_name: maintainerr
    volumes:
      - /appdata/maintainerr_data:/opt/data
    environment:
      - TZ=America/Chicago
    networks:
      - proxy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maintainerr.rule=Host(`maintainerr.grant.onl`)"
      - "traefik.http.routers.maintainerr.entrypoints=https"
      - "traefik.http.routers.secure.middlewares=default-whitelist"
      - "traefik.http.routers.maintainerr.tls.certresolver=cloudflare"
      - "traefik.http.services.maintainerr.loadbalancer.server.port=6246"

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - TZ=America/Toronto
    volumes:
      - /appdata/bazarr_data:/config
      - media:/Media
    networks:
      - proxy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.grant.onl`)"
      - "traefik.http.routers.bazarr.entrypoints=https"
      - "traefik.http.routers.secure.middlewares=default-whitelist"
      - "traefik.http.routers.bazarr.tls.certresolver=cloudflare"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"

  autoscan:
    container_name: autoscan
    image: hotio/autoscan:latest
    networks:
      - proxy
    volumes:
      - /appdata/autoscan_data:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.autoscan.rule=Host(`autoscan.grant.onl`)"
      - "traefik.http.routers.autoscan.entrypoints=https"
      - "traefik.http.routers.secure.middlewares=default-whitelist"
      - "traefik.http.routers.autoscan.tls.certresolver=cloudflare"
      - "traefik.http.services.autoscan.loadbalancer.server.port=3030"

  tautulli:
    image: tautulli/tautulli:latest
    container_name: tautulli
    restart: unless-stopped
    volumes:
      - /appdata/tautulli_data:/config
    environment:
      - TZ=America/New_York
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.grant.onl`)"
      - "traefik.http.routers.tautulli.entrypoints=https"
      - "traefik.http.routers.secure.middlewares=default-whitelist"
      - "traefik.http.routers.tautulli.tls.certresolver=cloudflare"
      - "traefik.http.services.tautulli.loadbalancer.server.port=8181"

  huntarr:
    image: huntarr/huntarr:latest
    container_name: huntarr
    restart: always
    networks:
      - proxy
    volumes:
      - /appdata/huntarr_data:/config
    environment:
      - TZ=America/New_York
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.huntarr.rule=Host(`huntarr.grant.onl`)"
      - "traefik.http.routers.huntarr.entrypoints=https"
      - "traefik.http.routers.secure.middlewares=default-whitelist"
      - "traefik.http.routers.huntarr.tls.certresolver=cloudflare"
      - "traefik.http.services.huntarr.loadbalancer.server.port=9705"

volumes:
  media:
    driver: local
    driver_opts:
      type: nfs
      o: "addr={{ docker.nas_ip }},rw,nfsvers=4.2,nconnect=4"
      device: ":/srv/gateway-exports/nfs/Media"
  downloads:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=192.168.0.78,rw,vers=4.2,nconnect=4,rsize=1048576,wsize=1048576,timeo=600,retrans=2"
      device: ":/exports/downloads"
networks:
  proxy:
    external: true
