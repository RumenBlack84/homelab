# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
networks:
  proxy: 
    external: true
  unifi:
services:
  unifi-mongo:
    image: mongo:${MONGO_VERSION:-8}    # Required MONGO_VERSION, Default "8", specify whatever Mongo version tag you need. DO NOT set 'latest' tag
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
    container_name: unifi-mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-root}                    # Required only if using mongodb version < 6.0, otherwise do not set (See official Mongo image)
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:?Root Password Required}  # Required only if using mongodb version < 6.0, otherwise do not set  (See official Mongo image)
      - MONGO_USER=${MONGO_USER:-unifi}                     # Default "unifi"
      - MONGO_PASS=${MONGO_PASS:?Mongo Password Required}   # Required
      - MONGO_DBNAME=${MONGO_DBNAME:-unifi}                 # Default "unifi"
      - MONGO_AUTHSOURCE=${MONGO_AUTHSOURCE}
    volumes:
      - /appdata/unifi/mongodb_data:/data/db
# use init script on first run to prep database
#      - /home/bgrant/docker-compose/unifi/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    networks:
      unifi:
    restart: unless-stopped

  unifi-network-application:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-network-application
    depends_on: 
      unifi-mongo: 
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - MONGO_USER=${MONGO_USER:-unifi}                     # Required, Default "unifi"
      - MONGO_PASS=${MONGO_PASS:?Mongo Password Required}   # Required, Note some special charactor could cause failure to connect to MondoDB
      - MONGO_DBNAME=${MONGO_DBNAME:-unifi}                 # Required, Default "unifi"
      - MONGO_HOST=unifi-mongo                              # Required, must match the mongo container name
      - MONGO_PORT=27017                                    # Required, Must be that same as the mongo container defined port
    volumes:
      - /appdata/unifi/unifi_data:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp                                       # optional
    networks:
      proxy:
      unifi:
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.unifi.rule=Host(`unifi.grant.onl`)"
      - "traefik.http.routers.unifi.entrypoints=https"
      - "traefik.http.routers.unifi.middlewares=default-whitelist@file,default-headers@file"
      - "traefik.http.routers.unifi.tls.certresolver=cloudflare"
      - "traefik.http.services.unifi.loadbalancer.server.port=8443"
      - "traefik.http.services.unifi.loadbalancer.server.scheme=https"

