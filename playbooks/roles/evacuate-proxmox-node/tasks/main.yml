---
- name: Get list of VMs
  delegate_to: localhost
  community.general.proxmox_vm_info:
    api_user: "{{ proxmox.api_user }}"
    api_password: "{{ proxmox.api_password }}"
    api_host: "{{ hostvars[inventory_hostname].proxmox_host }}"
    validate_certs: false
  register: proxmox_vms

- name: Debug proxmox_vms
  delegate_to: localhost
  ansible.builtin.debug:
    msg: "Checking proxmox_vms: {{ proxmox_vms }}"

- name: Filter VMs on current node
  delegate_to: localhost
  set_fact:
    vms_on_host: >-
      {{ proxmox_vms.virtual_machines | selectattr('node', 'equalto', proxmox_node) | list }}

- name: Debug vms_on_host
  delegate_to: localhost
  ansible.builtin.debug:
    msg: "Checking vms_on_host : {{ vms_on_host }}"

- name: Evacuate or shutdown VMs
  block:
    - name: Shutdown immobile VMs
      delegate_to: localhost
      community.general.proxmox:
        api_user: "{{ proxmox_user }}"
        api_token_id: "{{ proxmox_token_id }}"
        api_token_secret: "{{ proxmox_token_secret }}"
        api_host: "{{ proxmox_host }}"
        validate_certs: false
        vmid: "{{ item.vmid }}"
        state: stopped
      loop: "{{ vms_on_host }}"
      when: >
        (item.tags is defined) and
        ('immobile' in item.tags | regex_findall('[^,]+'))

    - name: Migrate mobile VMs
      delegate_to: localhost
      community.general.proxmox_migrate:
        api_user: "{{ proxmox_user }}"
        api_token_id: "{{ proxmox_token_id }}"
        api_token_secret: "{{ proxmox_token_secret }}"
        api_host: "{{ proxmox_host }}"
        validate_certs: false
        vmid: "{{ item.vmid }}"
        target_node: "{{ destination_node }}"
      loop: "{{ vms_on_host }}"
      when: >
        (item.tags is not defined) or
        ('immobile' not in item.tags | regex_findall('[^,]+'))
